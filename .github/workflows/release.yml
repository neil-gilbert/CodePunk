name: Build & Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      manual_note:
        description: 'Optional note for manual run'
        required: false
        default: ''

permissions:
  contents: write
  packages: read
  actions: read

jobs:
  build-test-pack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore
        run: dotnet restore CodePunk.sln
      - name: Build
        run: dotnet build --configuration Release --no-restore CodePunk.sln
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity minimal CodePunk.sln
      - name: Pack Tool
        run: dotnet pack src/CodePunk.Console/CodePunk.Console.csproj -c Release -o artifacts/nuget /p:ContinuousIntegrationBuild=true
      - name: Upload Tool Package
        uses: actions/upload-artifact@v4
        with:
            name: tool-nuget-package
            path: artifacts/nuget/*.nupkg

  publish-binaries:
    if: github.event_name != 'pull_request'
    needs: build-test-pack
    strategy:
      fail-fast: false
      matrix:
        rid: [ 'linux-x64', 'linux-arm64', 'win-x64', 'osx-x64', 'osx-arm64' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Publish ${{ matrix.rid }}
        run: |
          dotnet publish src/CodePunk.Console/CodePunk.Console.csproj -c Release -r ${{ matrix.rid }} \
            --self-contained true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true \
            -o artifacts/${{ matrix.rid }}
          cd artifacts/${{ matrix.rid }}
          zip -r ../codepunk-${{ github.ref_name }}-${{ matrix.rid }}.zip .
      - name: Upload Artifact ${{ matrix.rid }}
        uses: actions/upload-artifact@v4
        with:
          name: codepunk-${{ matrix.rid }}
          path: artifacts/codepunk-${{ github.ref_name }}-${{ matrix.rid }}.zip

  publish-aot-linux:
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
    needs: build-test-pack
    continue-on-error: true
    runs-on: ubuntu-latest
    env:
      RID: linux-x64
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Publish AOT ${RID}
        run: |
          dotnet publish src/CodePunk.Console/CodePunk.Console.csproj -c Release -r ${RID} \
            /p:PublishAot=true /p:StripSymbols=true /p:EnableCompressionInSingleFile=true \
            --self-contained true -o artifacts/aot-${RID}
          cd artifacts/aot-${RID}
          zip -r ../codepunk-${{ github.ref_name }}-${RID}-aot.zip .
      - name: Upload AOT Artifact
        uses: actions/upload-artifact@v4
        with:
          name: codepunk-aot-${{ env.RID }}
          path: artifacts/codepunk-${{ github.ref_name }}-${{ env.RID }}-aot.zip

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ build-test-pack, publish-binaries, publish-aot-linux ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Generate Checksums
        run: |
          cd dist
          find . -type f -name '*.zip' -exec shasum -a 256 {} \; > SHA256SUMS.txt
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/codepunk-*.zip
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Listing downloaded dist directory contents for debugging" 
          find dist -maxdepth 3 -type f -name '*.nupkg' -print || true
          PACKAGE_GLOB="dist/tool-nuget-package/*.nupkg"
          if ls $PACKAGE_GLOB 1> /dev/null 2>&1; then
            echo "Found packages, pushing..."
            dotnet nuget push $PACKAGE_GLOB --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate
          else
            echo "No packages found at $PACKAGE_GLOB" >&2
            exit 1
          fi
